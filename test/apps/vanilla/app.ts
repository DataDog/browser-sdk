import { datadogLogs } from '@datadog/browser-logs'
import { datadogRum } from '@datadog/browser-rum'

declare global {
  interface Window {
    LOGS_INIT?: () => void
    RUM_INIT?: () => void
  }
}

if (typeof window !== 'undefined') {
  if (window.LOGS_INIT) {
    window.LOGS_INIT()
  }

  if (window.RUM_INIT) {
    window.RUM_INIT()
  }
} else {
  // Document is always generated by the SSR environment
  // @ts-ignore If document is mocked, the SDK executes further enough to throw an error
  globalThis.document = {}
  ;(globalThis as any).__ddBrowserSdkExtensionCallback = () => {
    throw new Error('the SDK should not send events')
  }

  // compat test
  datadogLogs.init({ clientToken: 'xxx', beforeSend: undefined, telemetrySampleRate: 100 })
  datadogRum.init({ clientToken: 'xxx', applicationId: 'xxx', beforeSend: undefined, telemetrySampleRate: 100 })
  datadogRum.setUser({ id: undefined })

  if (datadogLogs.getInternalContext() || datadogRum.getInternalContext()) {
    throw new Error('SDK should not start on SSR environments')
  }
}
