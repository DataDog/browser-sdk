variables:
  CURRENT_STAGING: staging-38
  APP: 'browser-sdk'
  CURRENT_CI_IMAGE: 90
  BUILD_STABLE_REGISTRY: 'registry.ddbuild.io'
  CI_IMAGE: '$BUILD_STABLE_REGISTRY/ci/$APP:$CURRENT_CI_IMAGE'
  GIT_REPOSITORY: 'git@github.com:DataDog/browser-sdk.git'
  MAIN_BRANCH: 'main'
  NEXT_MAJOR_BRANCH: ''
  CHROME_PACKAGE_VERSION: 139.0.7258.66-1
  FF_TIMESTAMPS: 'true' # Enable timestamps for gitlab-ci logs

cache:
  key:
    files:
      - yarn.lock
  paths:
    - .yarn/cache

stages:
  - task
  - ci-image
  - test
  - after-tests
  - browserstack
  - pre-deploy
  - deploy:canary
  - notify:canary
  - deploy
  - notify

.base-configuration:
  tags:
    - 'arch:amd64'
  image: $CI_IMAGE
  id_tokens:
    DDOCTOSTS_ID_TOKEN:
      aud: dd-octo-sts
  retry:
    max: 2
    when:
      - runner_system_failure

########################################################################################################################
# Branch selection helpers
########################################################################################################################

.test-allowed-branches:
  except:
    refs:
      - /^release\//
      - schedules

.bs-allowed-branches:
  except:
    refs:
      - main
      - /^mq-working-branch-staging-[0-9]+-[a-z0-9]+$/
      - /^staging-[0-9]+$/
      - /^release\//
      - schedules

.feature-branches:
  except:
    refs:
      - main
      - tags
      - /^staging-[0-9]+$/
      - /^release\//
      - schedules
    variables:
      - $CI_COMMIT_REF_NAME == $NEXT_MAJOR_BRANCH

.next-major-branch:
  only:
    variables:
      - $CI_COMMIT_REF_NAME == $NEXT_MAJOR_BRANCH

.staging:
  only:
    variables:
      - $CI_COMMIT_REF_NAME == $CURRENT_STAGING

.main:
  only:
    refs:
      - main
  except:
    refs:
      - schedules
    variables:
      - $CI_COMMIT_TITLE =~ /^v[0-9.]+/

.tags:
  only:
    refs:
      - tags

###########################################################################################################################
# Resource allocation
###########################################################################################################################
.resource-allocation-4-cpus:
  variables:
    WORKERS: 2
    KUBERNETES_CPU_REQUEST: 4
    KUBERNETES_CPU_LIMIT: 4
    KUBERNETES_MEMORY_REQUEST: 16Gi
    KUBERNETES_MEMORY_LIMIT: 16Gi
    NODE_OPTIONS: '--max-old-space-size=16000'

########################################################################################################################
# CI image
########################################################################################################################

ci-image:
  stage: ci-image
  extends:
    - .base-configuration
    - .feature-branches
  when: manual
  tags: ['runner:docker', 'size:large']
  image: $BUILD_STABLE_REGISTRY/docker:18.03.1
  script:
    - docker build --build-arg CHROME_PACKAGE_VERSION=$CHROME_PACKAGE_VERSION --tag $CI_IMAGE .
    - docker push $CI_IMAGE

########################################################################################################################
# Deploy
########################################################################################################################


test-acto-release:
  stage: test
  extends:
    - .base-configuration
    - .tags
  id_tokens:
    DDOCTOSTS_ID_TOKEN:
      aud: dd-octo-sts

  before_script:
    # Get a token
    - dd-octo-sts version
    - dd-octo-sts debug --scope DataDog/browser-sdk --policy self.gitlab.release
    - dd-octo-sts token --scope DataDog/browser-sdk --policy self.gitlab.release > token.txt

  script:
    - export GITHUB_TOKEN=$(cat token.txt)
    - gh release create ci-test-release \
      -R DataDog/browser-sdk \
      --title "CI Test Release" \
      --notes "This is a test release created from the GitLab pipeline."
    - gh release list -R DataDog/browser-sdk
    - echo "Done!"

  after_script:
    # Revoke the token after usage
    - dd-octo-sts revoke -t $(cat token.txt)

