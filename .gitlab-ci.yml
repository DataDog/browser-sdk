variables:
  APP: 'browser-agent'
  CURRENT_CI_IMAGE: 11
  BUILD_STABLE_REGISTRY: '486234852809.dkr.ecr.us-east-1.amazonaws.com'
  CI_IMAGE: '$BUILD_STABLE_REGISTRY/ci/$APP:$CURRENT_CI_IMAGE'

stages:
  - ci-image
  - test
  - cbt
  - deploy

ci-image:
  stage: ci-image
  when: manual
  except: [tags, schedules]
  tags: ['runner:docker', 'size:large']
  image: $BUILD_STABLE_REGISTRY/docker:18.03.1
  script:
    - docker build --tag $CI_IMAGE .
    - docker push $CI_IMAGE

format:
  stage: test
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - yarn format

lint:
  stage: test
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - yarn lint

unit:
  stage: test
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - yarn test

e2e:
  stage: test
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - yarn test:e2e

cbt:
  stage: cbt
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - ./ci-cbt.sh

deploy-staging:
  only:
    refs:
      - master
  stage: deploy
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - TARGET_DC=eu TARGET_ENV=staging yarn build
    - TARGET_DC=us TARGET_ENV=staging yarn build
    - ./deploy.sh staging

deploy-prod:
  only:
    refs:
      - prod
  stage: deploy
  tags: ['runner:main', 'size:large']
  image: $CI_IMAGE
  script:
    - yarn
    - TARGET_DC=eu TARGET_ENV=production yarn build
    - TARGET_DC=us TARGET_ENV=production yarn build
    - ./deploy.sh prod
